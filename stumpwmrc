;; Basic StumpWM Hacks
;; Sanjoy Das <sanjoy@playingwithpointers.com>

(in-package :stumpwm)
(load-module "mpd")

(set-font "-xos4-terminus-medium-r-normal--14-140-72-72-c-80-iso8859-15")

(defcommand pull-urxvt () ()
  "Start / pull *the* URxvt instance into this frame."
  (run-or-pull "exec rxvt-unicode -fn '7X14' -e /usr/bin/tmux" '(:class "URxvt")))

(defcommand raise-urxvt () ()
  "Start / raise *the* URxvt instance into this frame."
  (run-or-raise "exec rxvt-unicode -fn '7X14' -e /usr/bin/tmux" '(:class "URxvt")))

(defcommand raise-icedove () ()
  "Start / raise *the* Icedove instance into this frame."
  (run-or-raise "exec /home/sanjoy/Prefix/bin/xicedove" '(:class "Icedove")))

(defcommand raise-chrome () ()
  "Start / raise *the* Google Chrome instance into this frame."
  (run-or-raise "exec /home/sanjoy/Prefix/bin/launch-chrome" '(:class "Google-chrome")))

(define-key *root-map* (kbd "C-f")  "exec evince")
(define-key *root-map* (kbd "C-s")  "raise-chrome")
(define-key *root-map* (kbd "d")    "raise-urxvt")
(define-key *root-map* (kbd "C-d")  "raise-urxvt")
(define-key *root-map* (kbd "c")    "pull-urxvt")
(define-key *root-map* (kbd "C-c")  "pull-urxvt")
(define-key *root-map* (kbd "C-v")  "raise-browser")
(define-key *root-map* (kbd "v")    "raise-browser")
(define-key *root-map* (kbd ">")    "gnext")
(define-key *root-map* (kbd "<")    "gprev")
(define-key *root-map* (kbd "C-q")  "raise-icedove")
(define-key *root-map* (kbd "q")    "raise-icedove")
(define-key *root-map* (kbd "P")    "pull-window-by-number")
(define-key *tile-group-root-map* (kbd "C-TAB") "fnext")

(setf *mouse-focus-policy* :click)
(setf *window-border-style* :thin)

;; Mode line related settings

(defcommand activate-mode-lines () ()
  (dolist (h (screen-heads (current-screen)))
    (if (not (head-mode-line h))
        (toggle-mode-line (current-screen) h))))

(defcommand deactivate-mode-lines () ()
  (dolist (h (screen-heads (current-screen)))
    (if (head-mode-line h)
        (toggle-mode-line (current-screen) h))))

(setf *screen-mode-line-format*
      (list "^20"
            '(:eval (run-shell-command "date '+%R, %d %b (%a)' | tr -d [:cntrl:]" t))
            " ^30< "
            '(:eval (run-shell-command "mpc current | tr -d [:cntrl:]" t))
            " >^60 < UPTIME "
            '(:eval (run-shell-command "uptime | awk '{print $3}' | tr -d ',\\n'" t))
            " >"))

(setf *mode-line-timeout* 1)

(setf *mode-line-border-color*     "white")
(setf *mode-line-foreground-color* "gray")
(setf *mode-line-background-color* "black")

(defun mpd-toggle-function ()
  (run-shell-command "mpc toggle"))

(defun mpd-random-next ()
  (run-shell-command "mpc random on; mpc next; mpc random off"))

;; Left click to play / pause, right click to go to a random song on the current playlist.
(defun mode-line-click-hook (line button x y)
  (cond ((eql button 1)
         (mpd-toggle-function))
        ((eql button 3)
         (mpd-random-next))))

(activate-mode-lines)
(add-hook stumpwm:*mode-line-click-hook*
          'mode-line-click-hook)
