;; Basic StumpWM Hacks
;; Sanjoy Das <sanjoy@playingwithpointers.com>

(in-package :stumpwm)

(set-font "-xos4-terminus-medium-r-normal--14-140-72-72-c-80-iso8859-15")

(defcommand raise-urxvt () ()
  "Start / raise *the* URxvt instance into this frame."
  (run-or-raise "exec rxvt-unicode -e /usr/bin/tmux" '(:class "URxvt")))

(defcommand raise-chrome () ()
  "Start / raise *the* Google Chrome instance into this frame."
  (run-or-raise "exec /home/sanjoy/prefix/bin/launch-chrome" '(:class "Google-chrome")))

(define-key *root-map* (kbd "C-f")  "exec evince")
(define-key *root-map* (kbd "C-l")  "exec xscreensaver-command -lock")
(define-key *root-map* (kbd "c")    "raise-urxvt")
(define-key *root-map* (kbd "C-c")  "raise-urxvt")
(define-key *root-map* (kbd "C-v")  "raise-chrome")
(define-key *root-map* (kbd "v")    "raise-chrome")
(define-key *root-map* (kbd ">")    "gnext")
(define-key *root-map* (kbd "<")    "gprev")
(define-key *root-map* (kbd ".")    "snext")
(define-key *root-map* (kbd "C-d")  "exec amixer set Master 5%+ -c 0")
(define-key *root-map* (kbd "C-s")  "exec amixer set Master 5%- -c 0")
(define-key *root-map* (kbd "P")    "pull-window-by-number")
(define-key *tile-group-root-map* (kbd "C-TAB") "fnext")

(setf *mouse-focus-policy* :click)
(setf *window-border-style* :thin)
(setf *run-or-raise-all-screens* t)

;; Mode line related settings

(defcommand activate-mode-lines () ()
  (dolist (screen *screen-list*)
    (dolist (h (screen-heads screen))
      (if (not (head-mode-line h))
          (toggle-mode-line screen h)))))

(defcommand deactivate-mode-lines () ()
  (dolist (screen *screen-list*)
    (dolist (h (screen-heads screen))
      (if (head-mode-line h)
          (toggle-mode-line screen h)))))

(defun fmt-is-current-screen (ml)
  (if (eql (current-screen)
           (mode-line-screen ml))
      "*"
      " "))

(setf *screen-mode-line-formatters* (cons '(#\l fmt-is-current-screen)
                                           *screen-mode-line-formatters*))

(defun remove-last-char (str)
  (let ((idx (1- (length str))))
    (subseq str 0 idx)))

(defun sanitize (str replacement-str)
  (if (zerop (length str))
      replacement-str
      str))

(setf *screen-mode-line-format*
      (list "[ %l ] ^20[ "
            '(:eval (remove-last-char (run-shell-command "date '+%R, %d %b (%a)'" t)))
            " ] ^30[ Now Playing: "
            '(:eval (sanitize (run-shell-command "mpc current | tr -d '\\n'" t)
                     "Nothing"))
            " ]^60 [ Uptime: "
            '(:eval (run-shell-command "uptime | gawk 'match($0, /.*up ([^,]*).*/, ary) {print ary[1]}' | tr -d ',\\n'" t))
            "]"))

(setf *mode-line-timeout* 1)

(setf *mode-line-border-color*     "white")
(setf *mode-line-foreground-color* "gray")
(setf *mode-line-background-color* "black")

(defun mpd-toggle-function ()
  (run-shell-command "mpc toggle"))

;; Left click to play / pause, right click to go to a random song on the current playlist.
(defun mode-line-click-hook (line button x y)
  (cond ((eql button 1)
         (mpd-toggle-function))))

(activate-mode-lines)
(add-hook stumpwm:*mode-line-click-hook*
          'mode-line-click-hook)
